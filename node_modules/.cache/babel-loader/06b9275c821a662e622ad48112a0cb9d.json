{"ast":null,"code":"import{REGISTER_SUCCESS,REGISTER_FAIL,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,SET_MESSAGE}from\"./types\";import AuthService from\"../services/auth.service\";export var register=function register(email,mobile,password,roles){return function(dispatch){return AuthService.register(email,mobile,password,roles).then(function(response){dispatch({type:REGISTER_SUCCESS});dispatch({type:SET_MESSAGE,payload:response.data.message});return Promise.resolve();},function(error){var message=error.response&&error.response.data&&error.response.data.message||error.message||error.toString();dispatch({type:REGISTER_FAIL});dispatch({type:SET_MESSAGE,payload:message});return Promise.reject();});};};export var login=function login(email,password){return function(dispatch){return AuthService.login(email,password).then(function(data){dispatch({type:LOGIN_SUCCESS,payload:{user:data}});return Promise.resolve();},function(error){var message=error.response&&error.response.data&&error.response.data.message||error.message||error.toString();dispatch({type:LOGIN_FAIL});dispatch({type:SET_MESSAGE,payload:message});return Promise.reject();});};};export var logout=function logout(){return function(dispatch){AuthService.logout();dispatch({type:LOGOUT});};};","map":{"version":3,"sources":["E:/chaplathanda/react-redux-hooks-jwt-auth-master/frontend/src/actions/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","AuthService","register","email","mobile","password","roles","dispatch","then","response","type","payload","data","message","Promise","resolve","error","toString","reject","login","user","logout"],"mappings":"AAAA,OACEA,gBADF,CAEEC,aAFF,CAGEC,aAHF,CAIEC,UAJF,CAKEC,MALF,CAMEC,WANF,KAOO,SAPP,CASA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAOC,MAAP,CAAcC,QAAd,CAAuBC,KAAvB,QAAiC,UAACC,QAAD,CAAc,CACrE,MAAON,CAAAA,WAAW,CAACC,QAAZ,CAAqBC,KAArB,CAA2BC,MAA3B,CAAkCC,QAAlC,CAA2CC,KAA3C,EAAkDE,IAAlD,CACL,SAACC,QAAD,CAAc,CACZF,QAAQ,CAAC,CACPG,IAAI,CAAEf,gBADC,CAAD,CAAR,CAIAY,QAAQ,CAAC,CACPG,IAAI,CAAEV,WADC,CAEPW,OAAO,CAAEF,QAAQ,CAACG,IAAT,CAAcC,OAFhB,CAAD,CAAR,CAKA,MAAOC,CAAAA,OAAO,CAACC,OAAR,EAAP,CACD,CAZI,CAaL,SAACC,KAAD,CAAW,CACT,GAAMH,CAAAA,OAAO,CACVG,KAAK,CAACP,QAAN,EACCO,KAAK,CAACP,QAAN,CAAeG,IADhB,EAECI,KAAK,CAACP,QAAN,CAAeG,IAAf,CAAoBC,OAFtB,EAGAG,KAAK,CAACH,OAHN,EAIAG,KAAK,CAACC,QAAN,EALF,CAOAV,QAAQ,CAAC,CACPG,IAAI,CAAEd,aADC,CAAD,CAAR,CAIAW,QAAQ,CAAC,CACPG,IAAI,CAAEV,WADC,CAEPW,OAAO,CAAEE,OAFF,CAAD,CAAR,CAKA,MAAOC,CAAAA,OAAO,CAACI,MAAR,EAAP,CACD,CA/BI,CAAP,CAiCD,CAlCuB,EAAjB,CAoCP,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAChB,KAAD,CAAQE,QAAR,QAAqB,UAACE,QAAD,CAAc,CACtD,MAAON,CAAAA,WAAW,CAACkB,KAAZ,CAAkBhB,KAAlB,CAAyBE,QAAzB,EAAmCG,IAAnC,CACL,SAACI,IAAD,CAAU,CACRL,QAAQ,CAAC,CACPG,IAAI,CAAEb,aADC,CAEPc,OAAO,CAAE,CAAES,IAAI,CAAER,IAAR,CAFF,CAAD,CAAR,CAKA,MAAOE,CAAAA,OAAO,CAACC,OAAR,EAAP,CACD,CARI,CASL,SAACC,KAAD,CAAW,CACT,GAAMH,CAAAA,OAAO,CACVG,KAAK,CAACP,QAAN,EACCO,KAAK,CAACP,QAAN,CAAeG,IADhB,EAECI,KAAK,CAACP,QAAN,CAAeG,IAAf,CAAoBC,OAFtB,EAGAG,KAAK,CAACH,OAHN,EAIAG,KAAK,CAACC,QAAN,EALF,CAOAV,QAAQ,CAAC,CACPG,IAAI,CAAEZ,UADC,CAAD,CAAR,CAIAS,QAAQ,CAAC,CACPG,IAAI,CAAEV,WADC,CAEPW,OAAO,CAAEE,OAFF,CAAD,CAAR,CAKA,MAAOC,CAAAA,OAAO,CAACI,MAAR,EAAP,CACD,CA3BI,CAAP,CA6BD,CA9BoB,EAAd,CAgCP,MAAO,IAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAM,UAACd,QAAD,CAAc,CACxCN,WAAW,CAACoB,MAAZ,GAEAd,QAAQ,CAAC,CACPG,IAAI,CAAEX,MADC,CAAD,CAAR,CAGD,CANqB,EAAf","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const register = (email,mobile,password,roles) => (dispatch) => {\n  return AuthService.register(email,mobile,password,roles).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (email, password) => (dispatch) => {\n  return AuthService.login(email, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}