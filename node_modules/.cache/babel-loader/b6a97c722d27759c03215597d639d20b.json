{"ast":null,"code":"import _slicedToArray from\"E:\\\\chaplathanda\\\\react-redux-hooks-jwt-auth-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{makeStyles}from'@material-ui/core/styles';import TextField from'@material-ui/core/TextField';import Axios from'axios';import{useSelector}from'react-redux';import{Button,Paper,Typography}from'@material-ui/core';import Snackbar from'@material-ui/core/Snackbar';import MuiAlert from'@material-ui/lab/Alert';var useStyles=makeStyles(function(theme){return{root:{'& .MuiTextField-root':{margin:theme.spacing(1),width:'40ch'}},style:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",paddingTop:'1%'},style1:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",paddingTop:'7%'}};});function Alert(props){return/*#__PURE__*/React.createElement(MuiAlert,Object.assign({elevation:6,variant:\"filled\"},props));}export default function MultilineTextFields(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),opensnack=_useState2[0],setopensnack=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),snackMessage=_useState4[0],setsnackmessage=_useState4[1];var handleClose=function handleClose(event,reason){if(reason==='clickaway'){return;}setopensnack(false);};var _useSelector=useSelector(function(state){return state.auth;}),currentUser=_useSelector.user;var classes=useStyles();var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),subject=_React$useState2[0],setSubject=_React$useState2[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),messagetext=_useState6[0],setmessagetext=_useState6[1];var handleChange=function handleChange(event){setSubject(event.target.value);};var handleMessageChange=function handleMessageChange(e){setmessagetext(e.target.value);};var postQuery=function postQuery(){var email=currentUser.email;var messageid=Math.random().toString(36).substring(2,30)+Math.random().toString(36).substring(2,30);console.log(messageid);var values={email:email,subject:subject,messagetext:messagetext,messageid:messageid};Axios.post('http://localhost:8080/api/postquerymessage',{values:values}).then(function(response){console.log(response);if(response.status==200){setsnackmessage(\"Message Sent\");setopensnack(true);}});};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"form\",{className:classes.root,noValidate:true,autoComplete:\"off\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.style1},/*#__PURE__*/React.createElement(Typography,{variant:\"h4\",align:\"center\"},\"Post Your Query\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.style},/*#__PURE__*/React.createElement(TextField,{id:\"standard-multiline-flexible\",label:\"Course\",fullWidth:true,value:subject,onChange:handleChange,variant:\"outlined\"})),/*#__PURE__*/React.createElement(\"div\",{className:classes.style},/*#__PURE__*/React.createElement(TextField,{id:\"outlined-multiline-static\",label:\"Post your Query here\",multiline:true,rows:5,variant:\"outlined\",onChange:handleMessageChange})),/*#__PURE__*/React.createElement(\"div\",{className:classes.style},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:postQuery},\"Send\"))),/*#__PURE__*/React.createElement(Snackbar,{open:opensnack,autoHideDuration:6000,onClose:handleClose,anchorOrigin:{vertical:'top',horizontal:\"center\"}},/*#__PURE__*/React.createElement(Alert,{onClose:handleClose,severity:\"success\"},snackMessage)));}","map":{"version":3,"sources":["E:/chaplathanda/react-redux-hooks-jwt-auth-master/frontend/src/components/StudentMessage.js"],"names":["React","useState","makeStyles","TextField","Axios","useSelector","Button","Paper","Typography","Snackbar","MuiAlert","useStyles","theme","root","margin","spacing","width","style","display","justifyContent","alignItems","paddingTop","style1","Alert","props","MultilineTextFields","opensnack","setopensnack","snackMessage","setsnackmessage","handleClose","event","reason","state","auth","currentUser","user","classes","subject","setSubject","messagetext","setmessagetext","handleChange","target","value","handleMessageChange","e","postQuery","email","messageid","Math","random","toString","substring","console","log","values","post","then","response","status","vertical","horizontal"],"mappings":"yLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,UAAxB,KAA0C,mBAA1C,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CAGA,GAAMC,CAAAA,SAAS,CAAGT,UAAU,CAAC,SAACU,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJ,uBAAwB,CACtBC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc,CAEtBC,KAAK,CAAE,MAFe,CADpB,CADiC,CASvCC,KAAK,CAAE,CACLC,OAAO,CAAE,MADJ,CAELC,cAAc,CAAE,QAFX,CAGLC,UAAU,CAAE,QAHP,CAILC,UAAU,CAAC,IAJN,CATgC,CAevCC,MAAM,CAAE,CACNJ,OAAO,CAAE,MADH,CAENC,cAAc,CAAE,QAFV,CAGNC,UAAU,CAAE,QAHN,CAINC,UAAU,CAAC,IAJL,CAf+B,CAAZ,EAAD,CAA5B,CAuBA,QAASE,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACpB,mBAAO,oBAAC,QAAD,gBAAU,SAAS,CAAE,CAArB,CAAwB,OAAO,CAAC,QAAhC,EAA6CA,KAA7C,EAAP,CACD,CAED,cAAe,SAASC,CAAAA,mBAAT,CAA6BD,KAA7B,CAAoC,eAIlBvB,QAAQ,CAAC,KAAD,CAJU,wCAI1CyB,SAJ0C,eAIhCC,YAJgC,8BAMZ1B,QAAQ,CAAC,EAAD,CANI,yCAM1C2B,YAN0C,eAM7BC,eAN6B,eAOjD,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACnC,GAAIA,MAAM,GAAK,WAAf,CAA4B,CAC1B,OACD,CAEDL,YAAY,CAAC,KAAD,CAAZ,CACD,CANH,CAPiD,iBAkBjBtB,WAAW,CAAC,SAAC4B,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAD,CAlBM,CAkBjCC,WAlBiC,cAkBvCC,IAlBuC,CAmBjD,GAAMC,CAAAA,OAAO,CAAG1B,SAAS,EAAzB,CAnBiD,oBAoBnBX,KAAK,CAACC,QAAN,CAAe,EAAf,CApBmB,oDAoB1CqC,OApB0C,qBAoBjCC,UApBiC,oCAsBdtC,QAAQ,CAAC,EAAD,CAtBM,yCAsB1CuC,WAtB0C,eAsB9BC,cAtB8B,eAwBjD,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACX,KAAD,CAAW,CAC9BQ,UAAU,CAACR,KAAK,CAACY,MAAN,CAAaC,KAAd,CAAV,CACD,CAFD,CAIA,GAAMC,CAAAA,mBAAmB,CAAE,QAArBA,CAAAA,mBAAqB,CAACC,CAAD,CAAK,CAC5BL,cAAc,CAACK,CAAC,CAACH,MAAF,CAASC,KAAV,CAAd,CACH,CAFD,CAKA,GAAMG,CAAAA,SAAS,CAAC,QAAVA,CAAAA,SAAU,EAAI,CACtB,GAAMC,CAAAA,KAAK,CAACb,WAAW,CAACa,KAAxB,CAKA,GAAMC,CAAAA,SAAS,CAACC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAwC,EAAxC,EAA8CH,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAwC,EAAxC,CAA9D,CACAC,OAAO,CAACC,GAAR,CAAYN,SAAZ,EAEA,GAAMO,CAAAA,MAAM,CAAE,CACZR,KAAK,CAACA,KADM,CAEZV,OAAO,CAACA,OAFI,CAGZE,WAAW,CAACA,WAHA,CAIZS,SAAS,CAACA,SAJE,CAAd,CASE7C,KAAK,CAACqD,IAAN,CAAW,4CAAX,CAAwD,CAACD,MAAM,CAANA,MAAD,CAAxD,EAAkEE,IAAlE,CAAuE,SAAAC,QAAQ,CAAE,CAC7EL,OAAO,CAACC,GAAR,CAAYI,QAAZ,EAEA,GAAGA,QAAQ,CAACC,MAAT,EAAiB,GAApB,CAAwB,CACtB/B,eAAe,CAAC,cAAD,CAAf,CAEAF,YAAY,CAAC,IAAD,CAAZ,CAIH,CAIF,CAdD,EAgBC,CAlCD,CAwCA,mBAEE,qDAIA,4BAAM,SAAS,CAAEU,OAAO,CAACxB,IAAzB,CAAiC,UAAU,KAA3C,CAA4C,YAAY,CAAC,KAAzD,eAEE,2BAAK,SAAS,CAAEwB,OAAO,CAACf,MAAxB,eACE,oBAAC,UAAD,EACI,OAAO,CAAC,IADZ,CAEI,KAAK,CAAC,QAFV,oBADF,CAFF,cAUE,2BAAK,SAAS,CAAEe,OAAO,CAACpB,KAAxB,eACE,oBAAC,SAAD,EACE,EAAE,CAAC,6BADL,CAEE,KAAK,CAAC,QAFR,CAGE,SAAS,KAHX,CAIE,KAAK,CAAEqB,OAJT,CAKE,QAAQ,CAAEI,YALZ,CAME,OAAO,CAAC,UANV,EADF,CAVF,cAsBE,2BAAK,SAAS,CAAEL,OAAO,CAACpB,KAAxB,eACE,oBAAC,SAAD,EACE,EAAE,CAAC,2BADL,CAEE,KAAK,CAAC,sBAFR,CAGE,SAAS,KAHX,CAIE,IAAI,CAAE,CAJR,CAKE,OAAO,CAAC,UALV,CAME,QAAQ,CAAE4B,mBANZ,EADF,CAtBF,cAkCI,2BAAK,SAAS,CAAER,OAAO,CAACpB,KAAxB,eACA,oBAAC,MAAD,EAAS,OAAO,CAAC,WAAjB,CAA6B,KAAK,CAAC,SAAnC,CAA6C,OAAO,CAAE8B,SAAtD,SADA,CAlCJ,CAJA,cA+CA,oBAAC,QAAD,EAAU,IAAI,CAAErB,SAAhB,CAA2B,gBAAgB,CAAE,IAA7C,CAAmD,OAAO,CAAEI,WAA5D,CAEQ,YAAY,CAAE,CAAE+B,QAAQ,CAAC,KAAX,CAAkBC,UAAU,CAAC,QAA7B,CAFtB,eAGI,oBAAC,KAAD,EAAO,OAAO,CAAEhC,WAAhB,CAA6B,QAAQ,CAAC,SAAtC,EACGF,YADH,CAHJ,CA/CA,CAFF,CA6DD","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Paper, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '40ch',\r\n    },\r\n    \r\n\r\n  },\r\n  style: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingTop:'1%'\r\n  },\r\n  style1: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingTop:'7%'\r\n  }\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function MultilineTextFields(props) {\r\n\r\n\r\n\r\n  const [opensnack,setopensnack]=useState(false)\r\n\r\n  const [snackMessage,setsnackmessage]=useState('')\r\n  const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n  \r\n      setopensnack(false);\r\n    };\r\n  \r\n\r\n\r\n\r\n    const { user: currentUser } = useSelector((state) => state.auth);\r\n  const classes = useStyles();\r\n  const [subject, setSubject] = React.useState('');\r\n  \r\n  const [messagetext,setmessagetext]=useState(\"\")\r\n\r\n  const handleChange = (event) => {\r\n    setSubject(event.target.value);\r\n  };\r\n\r\n  const handleMessageChange =(e)=>{\r\n      setmessagetext(e.target.value);\r\n  }\r\n\r\n\r\n  const postQuery=()=>{\r\nconst email=currentUser.email\r\n\r\n\r\n\r\n\r\nconst messageid=Math.random().toString(36).substring(2, 30) + Math.random().toString(36).substring(2, 30);\r\nconsole.log(messageid)\r\n\r\nconst values ={\r\n  email:email,\r\n  subject:subject,\r\n  messagetext:messagetext,\r\n  messageid:messageid\r\n}\r\n\r\n\r\n    \r\n  Axios.post('http://localhost:8080/api/postquerymessage',{values}).then(response=>{\r\n      console.log(response)\r\n\r\n      if(response.status==200){\r\n        setsnackmessage(\"Message Sent\")\r\n\r\n        setopensnack(true)\r\n\r\n\r\n   \r\n    }\r\n\r\n\r\n\r\n  })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n\r\n    \r\n    \r\n    <form className={classes.root}   noValidate autoComplete=\"off\" >\r\n   \r\n      <div className={classes.style1}>\r\n        <Typography\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            >\r\n          Post Your Query\r\n          </Typography>\r\n        </div>\r\n      <div className={classes.style}>\r\n        <TextField\r\n          id=\"standard-multiline-flexible\"\r\n          label=\"Course\"\r\n          fullWidth\r\n          value={subject}\r\n          onChange={handleChange}\r\n          variant=\"outlined\"\r\n        />\r\n        \r\n      </div>\r\n     \r\n      <div className={classes.style}>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Post your Query here\"\r\n          multiline\r\n          rows={5}\r\n          variant=\"outlined\"\r\n          onChange={handleMessageChange}\r\n        />\r\n      </div>\r\n\r\n\r\n        <div className={classes.style}>\r\n        <Button  variant='contained' color='primary' onClick={postQuery} >Send</Button>\r\n        \r\n        </div>\r\n    \r\n     \r\n        \r\n\r\n    </form>\r\n    <Snackbar open={opensnack} autoHideDuration={6000} onClose={handleClose}\r\n            \r\n            anchorOrigin={{ vertical:'top', horizontal:\"center\" }}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {snackMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n\r\n    </>\r\n    \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}