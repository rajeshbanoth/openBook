{"ast":null,"code":"var _jsxFileName = \"E:\\\\chaplathanda\\\\react-redux-hooks-jwt-auth-master\\\\frontend\\\\src\\\\components\\\\MentorMessages.js\";\nimport { Button, List, ListItem, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nexport default function Messages(props) {\n  // const {response } = useSelector((state) => state.mentormessages);\n  // console.log(useSelector((state) => state.mentormessages))\n  const [currentmessage, setcurrentmessage] = useState('');\n  const responsedata = useSelector(state => state.mentormessages);\n  const [displaymessagelist, setdisplaymessagelist] = useState(false);\n  const messagedata = responsedata.totalmessagedata.response.data;\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  console.log(messagedata);\n\n  const setactivemessage = (messagedata, index) => {\n    setcurrentmessage(messagedata);\n    setCurrentIndex(index);\n    console.log(messagedata, index);\n    setdisplaymessagelist(!displaymessagelist);\n  };\n\n  const GotoBackMenu = () => {\n    setdisplaymessagelist(false);\n    setcurrentmessage('');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !displaymessagelist ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, messagedata && messagedata.map((messagedata, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: messagedata,\n    className: \"list-group-item \" + (index === currentIndex ? \"active\" : \"\"),\n    onClick: () => setactivemessage(messagedata, index),\n    key: index,\n    style: index === currentIndex ? {\n      backgroundColor: '#b1d9ab'\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, messagedata.studentemail))))) : /*#__PURE__*/React.createElement(React.Fragment, null, \" \"), currentmessage ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: GotoBackMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 1\n    }\n  }, \"back\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexDirection: 'column',\n      display: 'flex',\n      justifyContent: 'space-evenly'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }\n  }, \" From:\", /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 22\n    }\n  }, currentmessage.studentemail)), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 1\n    }\n  }, \"Subject:\", /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"  \", currentmessage.messagesubject, \"  \"), \" \"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 1\n    }\n  }, \"Date :\", /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 1\n    }\n  }, \" \", currentmessage.createdAt)))) : /*#__PURE__*/React.createElement(React.Fragment, null));\n}","map":{"version":3,"sources":["E:/chaplathanda/react-redux-hooks-jwt-auth-master/frontend/src/components/MentorMessages.js"],"names":["Button","List","ListItem","Typography","React","useState","useSelector","Messages","props","currentmessage","setcurrentmessage","responsedata","state","mentormessages","displaymessagelist","setdisplaymessagelist","messagedata","totalmessagedata","response","data","currentIndex","setCurrentIndex","console","log","setactivemessage","index","GotoBackMenu","map","backgroundColor","studentemail","flexDirection","display","justifyContent","messagesubject","createdAt"],"mappings":"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","sourcesContent":["import { Button, List, ListItem, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Messages(props) {\r\n    // const {response } = useSelector((state) => state.mentormessages);\r\n\r\n\r\n    // console.log(useSelector((state) => state.mentormessages))\r\n\r\n\r\n\r\n\r\n    const [currentmessage, setcurrentmessage] = useState('')\r\n\r\n    const responsedata = useSelector((state) => state.mentormessages)\r\n\r\n    const [displaymessagelist, setdisplaymessagelist] = useState(false)\r\n\r\n\r\n\r\n    const messagedata = responsedata.totalmessagedata.response.data\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(-1);\r\n\r\n    console.log(messagedata)\r\n\r\n\r\n\r\n    const setactivemessage = (messagedata, index) => {\r\n\r\n        setcurrentmessage(messagedata)\r\n        setCurrentIndex(index);\r\n\r\n        console.log(messagedata, index)\r\n\r\n\r\n        setdisplaymessagelist(!displaymessagelist)\r\n\r\n      \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const GotoBackMenu =()=>{\r\n\r\n        setdisplaymessagelist(false)\r\n        setcurrentmessage('')\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n        {!(displaymessagelist) ? (<> \r\n\r\n\r\n\r\n            <List>\r\n                {messagedata &&\r\n                    messagedata.map((messagedata, index) => (\r\n\r\n\r\n                        <>\r\n\r\n                            <ListItem button key={messagedata}\r\n                                className={\r\n                                    \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n\r\n                                }\r\n                                onClick={() => setactivemessage(messagedata, index)}\r\n                                key={index}\r\n                                style={(index === currentIndex ? { backgroundColor: '#b1d9ab' } : null)}\r\n\r\n\r\n                            >\r\n                                {messagedata.studentemail}\r\n                            </ListItem>\r\n                        </>\r\n                    ))}\r\n            </List>\r\n        \r\n        \r\n        </>) \r\n        \r\n        \r\n        :( <> </>)}\r\n\r\n\r\n\r\n           \r\n\r\n\r\n            { currentmessage ? (<>\r\n\r\n\r\n\r\n<Button onClick={GotoBackMenu}>back</Button>\r\n\r\n<div style={{flexDirection:'column',display:'flex',justifyContent:'space-evenly'}}>\r\n\r\n   <Typography> From:<Typography color='primary'>{currentmessage.studentemail}</Typography></Typography>\r\n\r\n\r\n\r\n\r\n<Typography>Subject:<Typography  color='primary'>  {currentmessage.messagesubject}  </Typography> </Typography>\r\n\r\n\r\n\r\n\r\n<Typography>Date :\r\n<Typography> {currentmessage.createdAt}</Typography></Typography>\r\n\r\n\r\n\r\n</div>\r\n\r\n           \r\n\r\n\r\n\r\n            </>) : (<>\r\n\r\n\r\n            </>)}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}