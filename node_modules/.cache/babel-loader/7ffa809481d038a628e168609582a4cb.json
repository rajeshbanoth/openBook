{"ast":null,"code":"var _jsxFileName = \"E:\\\\chaplathanda\\\\react-redux-hooks-jwt-auth-master\\\\frontend\\\\src\\\\components\\\\BoardUser.js\";\nimport Axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport UserService from \"../services/user.service\";\n\nconst BoardUser = () => {\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const [content, setContent] = useState(\"\");\n  useEffect(() => {\n    const mentoremail = currentUser.email;\n    console.log(mentoremail);\n    Axios.post('http://localhost:8080//api/get/querydataforreply', {\n      mentoremail\n    }).then(response => {\n      console.log(response);\n    });\n  }, []);\n  useEffect(() => {\n    UserService.getUserBoard().then(response => {\n      setContent(response.data);\n    }, error => {\n      const _content = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n\n      setContent(_content);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, content)));\n};\n\nexport default BoardUser;","map":{"version":3,"sources":["E:/chaplathanda/react-redux-hooks-jwt-auth-master/frontend/src/components/BoardUser.js"],"names":["Axios","React","useState","useEffect","useSelector","UserService","BoardUser","user","currentUser","state","auth","content","setContent","mentoremail","email","console","log","post","then","response","getUserBoard","data","error","_content","message","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEtB,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAwBJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAzC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAIAC,EAAAA,SAAS,CAAC,MAAI;AAEZ,UAAMU,WAAW,GAAGL,WAAW,CAACM,KAAhC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEAb,IAAAA,KAAK,CAACiB,IAAN,CAAW,kDAAX,EAA8D;AAACJ,MAAAA;AAAD,KAA9D,EAA6EK,IAA7E,CAAkFC,QAAQ,IAAE;AAE5FJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACC,KAHD;AAKD,GAXQ,EAWP,EAXO,CAAT;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,WAAW,CAACe,YAAZ,GAA2BF,IAA3B,CACGC,QAAD,IAAc;AACZP,MAAAA,UAAU,CAACO,QAAQ,CAACE,IAAV,CAAV;AACD,KAHH,EAIGC,KAAD,IAAW;AACT,YAAMC,QAAQ,GACXD,KAAK,CAACH,QAAN,IACCG,KAAK,CAACH,QAAN,CAAeE,IADhB,IAECC,KAAK,CAACH,QAAN,CAAeE,IAAf,CAAoBG,OAFtB,IAGAF,KAAK,CAACE,OAHN,IAIAF,KAAK,CAACG,QAAN,EALF;;AAOAb,MAAAA,UAAU,CAACW,QAAD,CAAV;AACD,KAbH;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,OAAL,CADF,CADF,CADF;AAOD,CA7CD;;AA+CA,eAAeL,SAAf","sourcesContent":["import Axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport UserService from \"../services/user.service\";\n\nconst BoardUser = () => {\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const [content, setContent] = useState(\"\");\n\n\n\n  useEffect(()=>{\n\n    const mentoremail = currentUser.email\n\n    console.log(mentoremail)\n\n    Axios.post('http://localhost:8080//api/get/querydataforreply',{mentoremail}).then(response=>{\n\n    console.log(response)\n    })\n\n  },[])\n\n  useEffect(() => {\n    UserService.getUserBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardUser;\n"]},"metadata":{},"sourceType":"module"}