{"ast":null,"code":"var _jsxFileName = \"E:\\\\chaplathanda\\\\react-redux-hooks-jwt-auth-master\\\\frontend\\\\src\\\\components\\\\StudentMessagePanel.js\";\nimport { Button, List, ListItem, TextField, Typography } from '@material-ui/core';\nimport Axios from 'axios';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }\n  }));\n}\n\nexport default function Messages(props) {\n  const [opensnack, setopensnack] = useState(false);\n  const [snackMessage, setsnackmessage] = useState('');\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setopensnack(false);\n  };\n\n  const [currentmessage, setcurrentmessage] = useState('');\n  const responsedata = useSelector(state => state.mentormessages);\n  const [displaymessagelist, setdisplaymessagelist] = useState(false);\n  const [replybox, setreplybox] = useState(false);\n  const messagedata = responsedata.totalmessagedata.response.data;\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [values, setvalues] = useState('');\n  console.log(messagedata);\n\n  const setactivemessage = (messagedata, index) => {\n    setcurrentmessage(messagedata);\n    setCurrentIndex(index);\n    console.log(messagedata, index);\n    setdisplaymessagelist(!displaymessagelist);\n  };\n\n  const GotoBackMenu = () => {\n    setdisplaymessagelist(false);\n    setcurrentmessage('');\n  };\n\n  const replymessage = () => {\n    setreplybox(!replybox);\n  };\n\n  const cancel = () => {\n    setreplybox(false);\n  }; // const SumitMessage =()=>{\n  //     const data={\n  //         replytext:values,\n  //         mentoremail:currentmessage.mentoremail,\n  //         studentemail:currentmessage.studentemail,\n  //         messageid:currentmessage.messageid\n  //     }\n  //     console.log(data)\n  //     Axios.put(\"http://localhost:8080/api/post/querydataforreply\",{data}).then(response=>{\n  // console.log(response)\n  // if(response.status==200){\n  //     setsnackmessage(\"Message Sent\")\n  //     setopensnack(true)\n  // }\n  // })}\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !displaymessagelist ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, messagedata && messagedata.map((messagedata, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: messagedata,\n    className: \"list-group-item \" + (index === currentIndex ? \"active\" : \"\"),\n    onClick: () => setactivemessage(messagedata, index),\n    key: index,\n    style: index === currentIndex ? {\n      backgroundColor: '#b1d9ab'\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, messagedata.mentoremail, \"  \", messagedata.updatedAt))))) : /*#__PURE__*/React.createElement(React.Fragment, null, \" \"), currentmessage ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: GotoBackMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 1\n    }\n  }, \"back\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 4\n    }\n  }, currentmessage.mentoremail)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexDirection: 'row',\n      display: 'flex',\n      paddingBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 1\n    }\n  }, currentmessage.updatedAt)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      fontSize: \"26px\",\n      paddingBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 1\n    }\n  }, \" \", currentmessage.messagetext)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      fontSize: \"26px\",\n      paddingBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 1\n    }\n  }, \" \", currentmessage.replytext)))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Snackbar, {\n    open: opensnack,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, snackMessage)));\n}","map":{"version":3,"sources":["E:/chaplathanda/react-redux-hooks-jwt-auth-master/frontend/src/components/StudentMessagePanel.js"],"names":["Button","List","ListItem","TextField","Typography","Axios","React","useState","useSelector","Snackbar","MuiAlert","Alert","props","Messages","opensnack","setopensnack","snackMessage","setsnackmessage","handleClose","event","reason","currentmessage","setcurrentmessage","responsedata","state","mentormessages","displaymessagelist","setdisplaymessagelist","replybox","setreplybox","messagedata","totalmessagedata","response","data","currentIndex","setCurrentIndex","values","setvalues","console","log","setactivemessage","index","GotoBackMenu","replymessage","cancel","map","backgroundColor","mentoremail","updatedAt","fontSize","flexDirection","display","paddingBottom","messagetext","replytext","vertical","horizontal"],"mappings":"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","sourcesContent":["import { Button, List, ListItem, TextField, Typography } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nexport default function Messages(props) {\r\n\r\n\r\n\r\n    const [opensnack,setopensnack]=useState(false)\r\n\r\n    const [snackMessage,setsnackmessage]=useState('')\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setopensnack(false);\r\n      };\r\n    \r\n  \r\n\r\n\r\n\r\n\r\n    const [currentmessage, setcurrentmessage] = useState('')\r\n\r\n    const responsedata = useSelector((state) => state.mentormessages)\r\n\r\n    const [displaymessagelist, setdisplaymessagelist] = useState(false)\r\n\r\nconst [replybox,setreplybox]=useState(false)\r\n\r\n    const messagedata = responsedata.totalmessagedata.response.data\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(-1);\r\n\r\n\r\n\r\n    const[values,setvalues]=useState('')\r\n\r\n    console.log(messagedata)\r\n\r\n\r\n\r\n    const setactivemessage = (messagedata, index) => {\r\n\r\n        setcurrentmessage(messagedata)\r\n        setCurrentIndex(index);\r\n\r\n        console.log(messagedata, index)\r\n\r\n\r\n        setdisplaymessagelist(!displaymessagelist)\r\n\r\n      \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const GotoBackMenu =()=>{\r\n\r\n        setdisplaymessagelist(false)\r\n        setcurrentmessage('')\r\n\r\n    }\r\n\r\n    const replymessage = ()=>{\r\n\r\n        setreplybox(!replybox)\r\n\r\n    }\r\n\r\n    const cancel = ( )=>{\r\n        setreplybox(false)\r\n    }\r\n\r\n\r\n    // const SumitMessage =()=>{\r\n        \r\n\r\n    //     const data={\r\n\r\n    //         replytext:values,\r\n    //         mentoremail:currentmessage.mentoremail,\r\n    //         studentemail:currentmessage.studentemail,\r\n    //         messageid:currentmessage.messageid\r\n\r\n    //     }\r\n\r\n    //     console.log(data)\r\n\r\n    //     Axios.put(\"http://localhost:8080/api/post/querydataforreply\",{data}).then(response=>{\r\n    // console.log(response)\r\n\r\n    // if(response.status==200){\r\n    //     setsnackmessage(\"Message Sent\")\r\n\r\n    //     setopensnack(true)\r\n    // }\r\n\r\n       \r\n\r\n    // })}\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n\r\n\r\n        {!(displaymessagelist) ? (<> \r\n\r\n\r\n\r\n            <List>\r\n                {messagedata &&\r\n                    messagedata.map((messagedata, index) => (\r\n\r\n\r\n                        <>\r\n\r\n                            <ListItem button key={messagedata}\r\n                                className={\r\n                                    \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n\r\n                                }\r\n                                onClick={() => setactivemessage(messagedata, index)}\r\n                                key={index}\r\n                                style={(index === currentIndex ? { backgroundColor: '#b1d9ab' } : null)}\r\n \r\n\r\n                            >\r\n                                {messagedata.mentoremail}  {messagedata.updatedAt}\r\n                            </ListItem>\r\n                        </>\r\n                    ))}\r\n            </List>\r\n        \r\n        \r\n        </>) \r\n        \r\n        \r\n        :( <> </>)}\r\n\r\n\r\n\r\n           \r\n\r\n\r\n            { currentmessage ? (<>\r\n\r\n\r\n\r\n<Button onClick={GotoBackMenu}>back</Button>\r\n\r\n<div >\r\n\r\n\r\n   \r\n<div>\r\n\r\n    \r\n   <Typography color='primary'  style={{fontSize:\"20px\"}}>{currentmessage.mentoremail}</Typography>\r\n\r\n</div>\r\n\r\n<div style={{flexDirection:'row',display:'flex',paddingBottom:'10px'}}>\r\n\r\n\r\n<Typography  color='primary' style={{fontSize:\"15px\"}}>{currentmessage.updatedAt}</Typography>\r\n</div>\r\n\r\n<div>\r\n<Typography  color='primary'  style={{fontSize:\"26px\",paddingBottom:'20px'}}> {currentmessage.messagetext}</Typography>\r\n\r\n</div>\r\n\r\n<div>\r\n<Typography  color='primary'  style={{fontSize:\"26px\",paddingBottom:'10px'}}> {currentmessage.replytext}</Typography>\r\n\r\n</div>\r\n\r\n\r\n{/* <Button  variant='outlined'  color='primary' style={{paddingBottom:'10px'}}  onClick={replymessage}>Reply</Button> */}\r\n\r\n\r\n\r\n{/* {(replybox) && <> */}\r\n\r\n{/* <div> */}\r\n    {/* <div>\r\n<TextField\r\n\r\n        style={{width:'100%'}}\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Message\"\r\n          multiline\r\n          rows={13}\r\n          defaultValue=\"Default Value\"\r\n          variant=\"outlined\"\r\n          onChange={(e)=>{\r\n              setvalues(e.target.value)\r\n          }}\r\n\r\n        />\r\n        </div> */}\r\n\r\n{/* <div>\r\n        <Button onClick={SumitMessage}>Send</Button>\r\n\r\n        <Button onClick={cancel}>Cancel</Button>\r\n        </div> */}\r\n        {/* </div> */}\r\n\r\n {/* </>} */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n           \r\n\r\n\r\n\r\n            </>) : (<>\r\n\r\n\r\n            </>)}\r\n\r\n\r\n\r\n            <Snackbar open={opensnack} autoHideDuration={6000} onClose={handleClose}\r\n            \r\n            anchorOrigin={{ vertical:'top', horizontal:\"center\" }}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {snackMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}