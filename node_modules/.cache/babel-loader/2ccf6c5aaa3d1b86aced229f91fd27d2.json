{"ast":null,"code":"var _jsxFileName = \"E:\\\\chaplathanda\\\\react-redux-hooks-jwt-auth-master\\\\frontend\\\\src\\\\components\\\\MentorMessages.js\";\nimport { Drawer, List, ListItem, makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerContainer: {\n    overflow: 'auto'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0),\n    backgroundColor: '#ededed',\n    height: \"100vh\" // paddingTop:theme.spacing(20)\n\n  },\n  searchInput: {\n    opacity: '0.6',\n    padding: `0px ${theme.spacing(1)}px`,\n    fontSize: '0.8rem',\n    '&:hover': {\n      backgroundColor: '#f2f2f2'\n    },\n    '& .MuiSvgIcon-root': {\n      marginRight: theme.spacing(1)\n    },\n    paddingTop: theme.spacing(2),\n    width: '10',\n    backgroundColor: '#e1e3e1',\n    borderRadius: '10px'\n  }\n}));\nexport default function Messages(props) {\n  // const {response } = useSelector((state) => state.mentormessages);\n  // console.log(useSelector((state) => state.mentormessages))\n  const classes = useStyles();\n  const [currentmessage, setcurrentmessage] = useState('');\n  const responsedata = useSelector(state => state.mentormessages);\n  const messagedata = responsedata.totalmessagedata.response.data;\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  console.log(messagedata);\n\n  const setactivemessage = (messagedata, index) => {\n    setcurrentmessage(messagedata);\n    setCurrentIndex(index);\n    console.log(messagedata, index);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"permanent\",\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, messagedata && messagedata.map((messagedata, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: messagedata,\n    className: \"list-group-item \" + (index === currentIndex ? \"active\" : \"\"),\n    onClick: () => setactivemessage(messagedata, index),\n    key: index,\n    style: index === currentIndex ? {\n      backgroundColor: '#b1d9ab'\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 1\n    }\n  }, messagedata.studentemail))))), /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 1\n    }\n  }, currentmessage ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 1\n    }\n  }, \" \", currentmessage.studentemail, \" \")) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n}","map":{"version":3,"sources":["E:/chaplathanda/react-redux-hooks-jwt-auth-master/frontend/src/components/MentorMessages.js"],"names":["Drawer","List","ListItem","makeStyles","React","useState","useSelector","drawerWidth","useStyles","theme","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","backgroundColor","height","searchInput","opacity","fontSize","marginRight","paddingTop","borderRadius","Messages","props","classes","currentmessage","setcurrentmessage","responsedata","state","mentormessages","messagedata","totalmessagedata","response","data","currentIndex","setCurrentIndex","console","log","setactivemessage","index","paper","map","studentemail"],"mappings":"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","sourcesContent":["import { Drawer, List, ListItem, makeStyles } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n   \r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n      overflow: 'auto',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(0),\r\n      backgroundColor:'#ededed',\r\n      height:\"100vh\",\r\n      // paddingTop:theme.spacing(20)\r\n    },\r\n    searchInput: {\r\n      opacity: '0.6',\r\n      padding: `0px ${theme.spacing(1)}px`,\r\n      fontSize: '0.8rem',\r\n      '&:hover': {\r\n          backgroundColor: '#f2f2f2'\r\n      },\r\n      '& .MuiSvgIcon-root': {\r\n          marginRight: theme.spacing(1)\r\n      },\r\n      paddingTop:theme.spacing(2),\r\n      width:'10',\r\n      backgroundColor:'#e1e3e1',\r\n      borderRadius:'10px'\r\n  }\r\n  }));\r\n\r\n\r\n\r\nexport default function Messages(props) {\r\n    // const {response } = useSelector((state) => state.mentormessages);\r\n\r\n\r\n// console.log(useSelector((state) => state.mentormessages))\r\n\r\nconst classes = useStyles();\r\n\r\n\r\n    const [currentmessage,setcurrentmessage]=useState('')\r\n\r\n    const responsedata = useSelector((state) => state.mentormessages)\r\n\r\n\r\n   \r\n    const messagedata=responsedata.totalmessagedata.response.data\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(-1);\r\n  \r\n   console.log(messagedata)\r\n\r\n\r\n\r\n   const setactivemessage =(messagedata, index)=>{\r\n\r\nsetcurrentmessage(messagedata)\r\n    setCurrentIndex(index);\r\n\r\n    console.log(messagedata,index)\r\n\r\n\r\n\r\n\r\n\r\n   }\r\n\r\n    return (\r\n        <>\r\n\r\n        \r\n<Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n            <List>\r\n            {messagedata &&\r\n              messagedata.map((messagedata, index) => (\r\n\r\n\r\n<>\r\n\r\n   \r\n\r\n\r\n\r\n\r\n<ListItem button key={messagedata}\r\n                  className={\r\n                    \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                    \r\n                  }\r\n                  onClick={() => setactivemessage(messagedata, index)}\r\n                  key={index}\r\n                  style={(index === currentIndex ? {backgroundColor:'#b1d9ab'} : null)}\r\n\r\n                \r\n                >\r\n                  {messagedata.studentemail}\r\n                </ListItem>\r\n                </>\r\n              ))}\r\n          </List>\r\n\r\n\r\n</Drawer>\r\n\r\n<main className={classes.content}>\r\n\r\n\r\n\r\n{ currentmessage ? ( <> \r\n\r\n\r\n<p> {currentmessage.studentemail} </p>\r\n\r\n\r\n\r\n</>) : ( <>\r\n\r\n\r\n </>) }\r\n\r\n\r\n</main>\r\n         \r\n\r\n\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}