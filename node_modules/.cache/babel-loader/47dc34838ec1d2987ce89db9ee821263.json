{"ast":null,"code":"var _jsxFileName = \"E:\\\\chaplathanda\\\\react-redux-hooks-jwt-auth-master\\\\frontend\\\\src\\\\components\\\\MentorMessages.js\";\nimport { Button, List, ListItem, TextField, Typography } from '@material-ui/core';\nimport Axios from 'axios';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nexport default function Messages(props) {\n  // const {response } = useSelector((state) => state.mentormessages);\n  // console.log(useSelector((state) => state.mentormessages))\n  const [currentmessage, setcurrentmessage] = useState('');\n  const responsedata = useSelector(state => state.mentormessages);\n  const [displaymessagelist, setdisplaymessagelist] = useState(false);\n  const [replybox, setreplybox] = useState(false);\n  const messagedata = responsedata.totalmessagedata.response.data;\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [values, setvalues] = useState('');\n  console.log(messagedata);\n\n  const setactivemessage = (messagedata, index) => {\n    setcurrentmessage(messagedata);\n    setCurrentIndex(index);\n    console.log(messagedata, index);\n    setdisplaymessagelist(!displaymessagelist);\n  };\n\n  const GotoBackMenu = () => {\n    setdisplaymessagelist(false);\n    setcurrentmessage('');\n  };\n\n  const replymessage = () => {\n    setreplybox(!replybox);\n  };\n\n  const cancel = () => {\n    setreplybox(false);\n  };\n\n  const SumitMessage = () => {\n    const data = {\n      replytext: values,\n      mentoremail: currentmessage.mentoremail,\n      studentemail: currentmessage.studentemail,\n      messageid: currentmessage.messageid\n    };\n    console.log(data);\n    Axios.put(\"http://localhost:8080/api/post/querydataforreply\", {\n      data\n    }).then(response => {\n      console.log(response);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !displaymessagelist ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, messagedata && messagedata.map((messagedata, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: messagedata,\n    className: \"list-group-item \" + (index === currentIndex ? \"active\" : \"\"),\n    onClick: () => setactivemessage(messagedata, index),\n    key: index,\n    style: index === currentIndex ? {\n      backgroundColor: '#b1d9ab'\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, messagedata.studentemail))))) : /*#__PURE__*/React.createElement(React.Fragment, null, \" \"), currentmessage ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: GotoBackMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 1\n    }\n  }, \"back\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 4\n    }\n  }, currentmessage.studentemail)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexDirection: 'row',\n      display: 'flex',\n      paddingBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontSize: \"15px\",\n      paddingRight: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 1\n    }\n  }, currentmessage.messagesubject, \" \"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 1\n    }\n  }, currentmessage.createdAt)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      fontSize: \"26px\",\n      paddingBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 1\n    }\n  }, \" \", currentmessage.messagetext)), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    style: {\n      paddingBottom: '10px'\n    },\n    onClick: replymessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 1\n    }\n  }, \"Reply\"), replybox && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: '100%'\n    },\n    id: \"outlined-multiline-static\",\n    label: \"Message\",\n    multiline: true,\n    rows: 13,\n    defaultValue: \"Default Value\",\n    variant: \"outlined\",\n    onChange: e => {\n      setvalues(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: SumitMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, \"Send\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: cancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, \"Cancel\")))))) : /*#__PURE__*/React.createElement(React.Fragment, null));\n}","map":{"version":3,"sources":["E:/chaplathanda/react-redux-hooks-jwt-auth-master/frontend/src/components/MentorMessages.js"],"names":["Button","List","ListItem","TextField","Typography","Axios","React","useState","useSelector","Messages","props","currentmessage","setcurrentmessage","responsedata","state","mentormessages","displaymessagelist","setdisplaymessagelist","replybox","setreplybox","messagedata","totalmessagedata","response","data","currentIndex","setCurrentIndex","values","setvalues","console","log","setactivemessage","index","GotoBackMenu","replymessage","cancel","SumitMessage","replytext","mentoremail","studentemail","messageid","put","then","map","backgroundColor","fontSize","flexDirection","display","paddingBottom","paddingRight","messagesubject","createdAt","messagetext","width","e","target","value"],"mappings":"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","sourcesContent":["import { Button, List, ListItem, TextField, Typography } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Messages(props) {\r\n    // const {response } = useSelector((state) => state.mentormessages);\r\n\r\n\r\n    // console.log(useSelector((state) => state.mentormessages))\r\n\r\n\r\n\r\n\r\n    const [currentmessage, setcurrentmessage] = useState('')\r\n\r\n    const responsedata = useSelector((state) => state.mentormessages)\r\n\r\n    const [displaymessagelist, setdisplaymessagelist] = useState(false)\r\n\r\nconst [replybox,setreplybox]=useState(false)\r\n\r\n    const messagedata = responsedata.totalmessagedata.response.data\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(-1);\r\n\r\n\r\n\r\n    const[values,setvalues]=useState('')\r\n\r\n    console.log(messagedata)\r\n\r\n\r\n\r\n    const setactivemessage = (messagedata, index) => {\r\n\r\n        setcurrentmessage(messagedata)\r\n        setCurrentIndex(index);\r\n\r\n        console.log(messagedata, index)\r\n\r\n\r\n        setdisplaymessagelist(!displaymessagelist)\r\n\r\n      \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const GotoBackMenu =()=>{\r\n\r\n        setdisplaymessagelist(false)\r\n        setcurrentmessage('')\r\n\r\n    }\r\n\r\n    const replymessage = ()=>{\r\n\r\n        setreplybox(!replybox)\r\n\r\n    }\r\n\r\n    const cancel = ( )=>{\r\n        setreplybox(false)\r\n    }\r\n\r\n\r\n    const SumitMessage =()=>{\r\n        \r\n\r\n        const data={\r\n\r\n            replytext:values,\r\n            mentoremail:currentmessage.mentoremail,\r\n            studentemail:currentmessage.studentemail,\r\n            messageid:currentmessage.messageid\r\n\r\n        }\r\n\r\n        console.log(data)\r\n\r\n        Axios.put(\"http://localhost:8080/api/post/querydataforreply\",{data}).then(response=>{\r\n            console.log(response)\r\n        })}\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n\r\n\r\n        {!(displaymessagelist) ? (<> \r\n\r\n\r\n\r\n            <List>\r\n                {messagedata &&\r\n                    messagedata.map((messagedata, index) => (\r\n\r\n\r\n                        <>\r\n\r\n                            <ListItem button key={messagedata}\r\n                                className={\r\n                                    \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n\r\n                                }\r\n                                onClick={() => setactivemessage(messagedata, index)}\r\n                                key={index}\r\n                                style={(index === currentIndex ? { backgroundColor: '#b1d9ab' } : null)}\r\n \r\n\r\n                            >\r\n                                {messagedata.studentemail}\r\n                            </ListItem>\r\n                        </>\r\n                    ))}\r\n            </List>\r\n        \r\n        \r\n        </>) \r\n        \r\n        \r\n        :( <> </>)}\r\n\r\n\r\n\r\n           \r\n\r\n\r\n            { currentmessage ? (<>\r\n\r\n\r\n\r\n<Button onClick={GotoBackMenu}>back</Button>\r\n\r\n<div >\r\n\r\n\r\n   \r\n<div>\r\n\r\n    \r\n   <Typography color='primary'  style={{fontSize:\"20px\"}}>{currentmessage.studentemail}</Typography>\r\n\r\n</div>\r\n\r\n<div style={{flexDirection:'row',display:'flex',paddingBottom:'10px'}}>\r\n\r\n<Typography   style={{fontSize:\"15px\",paddingRight:'10px'}}>{currentmessage.messagesubject} </Typography>\r\n\r\n<Typography  color='primary' style={{fontSize:\"15px\"}}>{currentmessage.createdAt}</Typography>\r\n</div>\r\n\r\n<div>\r\n<Typography  color='primary'  style={{fontSize:\"26px\",paddingBottom:'10px'}}> {currentmessage.messagetext}</Typography>\r\n\r\n</div>\r\n\r\n\r\n<Button  variant='outlined'  color='primary' style={{paddingBottom:'10px'}}  onClick={replymessage}>Reply</Button>\r\n\r\n\r\n\r\n{(replybox) && <>\r\n\r\n<div>\r\n    <div>\r\n<TextField\r\n\r\n        style={{width:'100%'}}\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Message\"\r\n          multiline\r\n          rows={13}\r\n          defaultValue=\"Default Value\"\r\n          variant=\"outlined\"\r\n          onChange={(e)=>{\r\n              setvalues(e.target.value)\r\n          }}\r\n\r\n        />\r\n        </div>\r\n\r\n<div>\r\n        <Button onClick={SumitMessage}>Send</Button>\r\n\r\n        <Button onClick={cancel}>Cancel</Button>\r\n        </div>\r\n        </div>\r\n\r\n </>}\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n           \r\n\r\n\r\n\r\n            </>) : (<>\r\n\r\n\r\n            </>)}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}