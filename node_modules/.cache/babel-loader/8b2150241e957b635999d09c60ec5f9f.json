{"ast":null,"code":"var _jsxFileName = \"E:\\\\chaplathanda\\\\react-redux-hooks-jwt-auth-master\\\\frontend\\\\src\\\\components\\\\StudentMessage.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { Button, Paper, Typography } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '40ch'\n    }\n  },\n  style: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: '1%'\n  },\n  style1: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: '7%'\n  }\n}));\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function MultilineTextFields() {\n  const [opensnack, setopensnack] = useState(false);\n  const [snackMessage, setsnackmessage] = useState('');\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setopensnack(false);\n  };\n\n  const {\n    user: currentUser\n  } = useSelector(state => state.auth);\n  const classes = useStyles();\n  const [subject, setSubject] = React.useState('');\n  const [messagetext, setmessagetext] = useState(\"\");\n\n  const handleChange = event => {\n    setSubject(event.target.value);\n  };\n\n  const handleMessageChange = e => {\n    setmessagetext(e.target.value);\n  };\n\n  const postQuery = () => {\n    const email = currentUser.email;\n    const messageid = Math.random().toString(36).substring(2, 30) + Math.random().toString(36).substring(2, 30);\n    console.log(messageid);\n    const values = {\n      email: email,\n      subject: subject,\n      messagetext: messagetext,\n      messageid: messageid\n    };\n    Axios.post('http://localhost:8080/api/postquerymessage', {\n      values\n    }).then(response => {\n      console.log(response);\n\n      if (response.status == 200) {\n        setsnackmessage(\"Message Sent\");\n        setopensnack(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.style1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Post Your Query\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"Course\",\n    fullWidth: true,\n    value: subject,\n    onChange: handleChange,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Post your Query here\",\n    multiline: true,\n    rows: 5,\n    variant: \"outlined\",\n    onChange: handleMessageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: postQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"Send\"))), /*#__PURE__*/React.createElement(Snackbar, {\n    open: opensnack,\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, snackMessage)));\n}","map":{"version":3,"sources":["E:/chaplathanda/react-redux-hooks-jwt-auth-master/frontend/src/components/StudentMessage.js"],"names":["React","useState","makeStyles","TextField","Axios","useSelector","Button","Paper","Typography","Snackbar","MuiAlert","useStyles","theme","root","margin","spacing","width","style","display","justifyContent","alignItems","paddingTop","style1","Alert","props","MultilineTextFields","opensnack","setopensnack","snackMessage","setsnackmessage","handleClose","event","reason","user","currentUser","state","auth","classes","subject","setSubject","messagetext","setmessagetext","handleChange","target","value","handleMessageChange","e","postQuery","email","messageid","Math","random","toString","substring","console","log","values","post","then","response","status","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Paper, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '40ch',\r\n    },\r\n    \r\n\r\n  },\r\n  style: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingTop:'1%'\r\n  },\r\n  style1: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingTop:'7%'\r\n  }\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function MultilineTextFields() {\r\n\r\n\r\n\r\n  const [opensnack,setopensnack]=useState(false)\r\n\r\n  const [snackMessage,setsnackmessage]=useState('')\r\n  const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n  \r\n      setopensnack(false);\r\n    };\r\n  \r\n\r\n\r\n\r\n    const { user: currentUser } = useSelector((state) => state.auth);\r\n  const classes = useStyles();\r\n  const [subject, setSubject] = React.useState('');\r\n  \r\n  const [messagetext,setmessagetext]=useState(\"\")\r\n\r\n  const handleChange = (event) => {\r\n    setSubject(event.target.value);\r\n  };\r\n\r\n  const handleMessageChange =(e)=>{\r\n      setmessagetext(e.target.value);\r\n  }\r\n\r\n\r\n  const postQuery=()=>{\r\nconst email=currentUser.email\r\n\r\n\r\n\r\n\r\nconst messageid=Math.random().toString(36).substring(2, 30) + Math.random().toString(36).substring(2, 30);\r\nconsole.log(messageid)\r\n\r\nconst values ={\r\n  email:email,\r\n  subject:subject,\r\n  messagetext:messagetext,\r\n  messageid:messageid\r\n}\r\n\r\n\r\n    \r\n  Axios.post('http://localhost:8080/api/postquerymessage',{values}).then(response=>{\r\n      console.log(response)\r\n\r\n      if(response.status==200){\r\n        setsnackmessage(\"Message Sent\")\r\n\r\n        setopensnack(true)\r\n    }\r\n\r\n\r\n\r\n  })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n    \r\n    <form className={classes.root}   noValidate autoComplete=\"off\" >\r\n      <div className={classes.style1}>\r\n        <Typography\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            >\r\n          Post Your Query\r\n          </Typography>\r\n        </div>\r\n      <div className={classes.style}>\r\n        <TextField\r\n          id=\"standard-multiline-flexible\"\r\n          label=\"Course\"\r\n          fullWidth\r\n          value={subject}\r\n          onChange={handleChange}\r\n          variant=\"outlined\"\r\n        />\r\n        \r\n      </div>\r\n     \r\n      <div className={classes.style}>\r\n        <TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Post your Query here\"\r\n          multiline\r\n          rows={5}\r\n          variant=\"outlined\"\r\n          onChange={handleMessageChange}\r\n        />\r\n      </div>\r\n\r\n\r\n        <div className={classes.style}>\r\n        <Button  variant='contained' color='primary' onClick={postQuery} >Send</Button>\r\n        </div>\r\n    \r\n     \r\n        \r\n\r\n    </form>\r\n    <Snackbar open={opensnack} autoHideDuration={6000} onClose={handleClose}\r\n            \r\n            anchorOrigin={{ vertical:'top', horizontal:\"center\" }}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {snackMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n\r\n    </>\r\n    \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}