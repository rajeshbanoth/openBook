{"ast":null,"code":"var _jsxFileName = \"E:\\\\chaplathanda\\\\react-redux-hooks-jwt-auth-master\\\\frontend\\\\src\\\\components\\\\MentorMessages.js\";\nimport { Button, List, ListItem, TextField, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nexport default function Messages(props) {\n  // const {response } = useSelector((state) => state.mentormessages);\n  // console.log(useSelector((state) => state.mentormessages))\n  const [currentmessage, setcurrentmessage] = useState('');\n  const responsedata = useSelector(state => state.mentormessages);\n  const [displaymessagelist, setdisplaymessagelist] = useState(false);\n  const [replybox, setreplybox] = useState(false);\n  const messagedata = responsedata.totalmessagedata.response.data;\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  console.log(messagedata);\n\n  const setactivemessage = (messagedata, index) => {\n    setcurrentmessage(messagedata);\n    setCurrentIndex(index);\n    console.log(messagedata, index);\n    setdisplaymessagelist(!displaymessagelist);\n  };\n\n  const GotoBackMenu = () => {\n    setdisplaymessagelist(false);\n    setcurrentmessage('');\n  };\n\n  const replymessage = () => {\n    setreplybox(!replybox);\n  };\n\n  const cancel = () => {\n    setreplybox(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !displaymessagelist ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, messagedata && messagedata.map((messagedata, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: messagedata,\n    className: \"list-group-item \" + (index === currentIndex ? \"active\" : \"\"),\n    onClick: () => setactivemessage(messagedata, index),\n    key: index,\n    style: index === currentIndex ? {\n      backgroundColor: '#b1d9ab'\n    } : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, messagedata.studentemail))))) : /*#__PURE__*/React.createElement(React.Fragment, null, \" \"), currentmessage ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: GotoBackMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 1\n    }\n  }, \"back\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    font: true,\n    style: {\n      fontSize: \"18px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }\n  }, currentmessage.studentemail)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexDirection: 'row',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 1\n    }\n  }, \"  \", currentmessage.messagesubject, \"  \"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      fontSize: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 1\n    }\n  }, \" \", currentmessage.createdAt)), /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    style: {\n      fontSize: \"26px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 1\n    }\n  }, \" \", currentmessage.messagetext), /*#__PURE__*/React.createElement(Button, {\n    onClick: replymessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 1\n    }\n  }, \"Reply\"), replybox && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    label: \"Multiline\",\n    multiline: true,\n    rows: 8,\n    defaultValue: \"Default Value\",\n    variant: \"outlined\" //   onChange={handleMessageChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"Send\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: cancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"Cancel\")))))) : /*#__PURE__*/React.createElement(React.Fragment, null));\n}","map":{"version":3,"sources":["E:/chaplathanda/react-redux-hooks-jwt-auth-master/frontend/src/components/MentorMessages.js"],"names":["Button","List","ListItem","TextField","Typography","React","useState","useSelector","Messages","props","currentmessage","setcurrentmessage","responsedata","state","mentormessages","displaymessagelist","setdisplaymessagelist","replybox","setreplybox","messagedata","totalmessagedata","response","data","currentIndex","setCurrentIndex","console","log","setactivemessage","index","GotoBackMenu","replymessage","cancel","map","backgroundColor","studentemail","fontSize","flexDirection","display","messagesubject","createdAt","messagetext"],"mappings":"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","sourcesContent":["import { Button, List, ListItem, TextField, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Messages(props) {\r\n    // const {response } = useSelector((state) => state.mentormessages);\r\n\r\n\r\n    // console.log(useSelector((state) => state.mentormessages))\r\n\r\n\r\n\r\n\r\n    const [currentmessage, setcurrentmessage] = useState('')\r\n\r\n    const responsedata = useSelector((state) => state.mentormessages)\r\n\r\n    const [displaymessagelist, setdisplaymessagelist] = useState(false)\r\n\r\nconst [replybox,setreplybox]=useState(false)\r\n\r\n    const messagedata = responsedata.totalmessagedata.response.data\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(-1);\r\n\r\n    console.log(messagedata)\r\n\r\n\r\n\r\n    const setactivemessage = (messagedata, index) => {\r\n\r\n        setcurrentmessage(messagedata)\r\n        setCurrentIndex(index);\r\n\r\n        console.log(messagedata, index)\r\n\r\n\r\n        setdisplaymessagelist(!displaymessagelist)\r\n\r\n      \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    const GotoBackMenu =()=>{\r\n\r\n        setdisplaymessagelist(false)\r\n        setcurrentmessage('')\r\n\r\n    }\r\n\r\n    const replymessage = ()=>{\r\n\r\n        setreplybox(!replybox)\r\n\r\n    }\r\n\r\n    const cancel = ( )=>{\r\n        setreplybox(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n        {!(displaymessagelist) ? (<> \r\n\r\n\r\n\r\n            <List>\r\n                {messagedata &&\r\n                    messagedata.map((messagedata, index) => (\r\n\r\n\r\n                        <>\r\n\r\n                            <ListItem button key={messagedata}\r\n                                className={\r\n                                    \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n\r\n                                }\r\n                                onClick={() => setactivemessage(messagedata, index)}\r\n                                key={index}\r\n                                style={(index === currentIndex ? { backgroundColor: '#b1d9ab' } : null)}\r\n\r\n\r\n                            >\r\n                                {messagedata.studentemail}\r\n                            </ListItem>\r\n                        </>\r\n                    ))}\r\n            </List>\r\n        \r\n        \r\n        </>) \r\n        \r\n        \r\n        :( <> </>)}\r\n\r\n\r\n\r\n           \r\n\r\n\r\n            { currentmessage ? (<>\r\n\r\n\r\n\r\n<Button onClick={GotoBackMenu}>back</Button>\r\n\r\n<div >\r\n\r\n\r\n   \r\n<div>\r\n   <Typography color='primary' font style={{fontSize:\"18px\"}}>{currentmessage.studentemail}</Typography>\r\n\r\n</div>\r\n\r\n<div style={{flexDirection:'row',display:'flex'}}>\r\n\r\n<Typography   style={{fontSize:\"15px\"}}>  {currentmessage.messagesubject}  </Typography>\r\n\r\n<Typography  color='primary' style={{fontSize:\"15px\"}}> {currentmessage.createdAt}</Typography>\r\n</div>\r\n\r\n\r\n<Typography  color='primary'  style={{fontSize:\"26px\"}}> {currentmessage.messagetext}</Typography>\r\n\r\n\r\n\r\n\r\n<Button onClick={replymessage}>Reply</Button>\r\n\r\n\r\n\r\n{(replybox) && <>\r\n\r\n<div>\r\n    <div>\r\n<TextField\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Multiline\"\r\n          multiline\r\n          rows={8}\r\n          defaultValue=\"Default Value\"\r\n          variant=\"outlined\"\r\n        //   onChange={handleMessageChange}\r\n\r\n        />\r\n        </div>\r\n\r\n<div>\r\n        <Button>Send</Button>\r\n\r\n        <Button onClick={cancel}>Cancel</Button>\r\n        </div>\r\n        </div>\r\n\r\n </>}\r\n\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n           \r\n\r\n\r\n\r\n            </>) : (<>\r\n\r\n\r\n            </>)}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}